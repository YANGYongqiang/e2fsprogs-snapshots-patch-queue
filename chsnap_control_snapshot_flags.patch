chsnap: Control snapshot file status flags

From: Amir Goldstein <amir73il@users.sf.net>

Reuse the code in chattr and to control snapshot file status flags
when chattr is invokes with prog_name chsnap.

Snapshot file flags are written to kernel with new ioctl EXT2_IOC_SETSNAPFLAGS.

The snapshot_file flag cannot be set on files and must be inherited from
the directory in which the file is created (the snapshots directory).
Set/clear the snapshot_file flag on snapshots directory with chattr +/-x.

Snapshots are controlled by setting/clearing snapshot file status flags.
Take snapshot with chsnap +S on a newly created snapshot file.
Delete snapshot with chsnap -S (this doesn't unlink the file).
Enable/disable snapshot read access with chsnap +/-n.

Signed-off-by: Amir Goldstein <amir73il@users.sf.net>

diff --git a/lib/e2p/Makefile.in b/lib/e2p/Makefile.in
index 576be55..a9476dd 100644
--- a/lib/e2p/Makefile.in
+++ b/lib/e2p/Makefile.in
@@ -17,14 +17,14 @@ INSTALL = @INSTALL@
 all::	e2p.pc
 
 OBJS=		feature.o fgetflags.o fsetflags.o fgetversion.o fsetversion.o \
-		fgetsnapflags.o \
+		fgetsnapflags.o fsetsnapflags.o \
 		getflags.o getversion.o hashstr.o iod.o ls.o mntopts.o \
 		parse_num.o pe.o pf.o ps.o setflags.o setversion.o uuid.o \
 		ostype.o percent.o
 
 SRCS=		$(srcdir)/feature.c $(srcdir)/fgetflags.c \
 		$(srcdir)/fsetflags.c $(srcdir)/fgetversion.c \
-		$(srcdir)/fgetsnapflags.c \
+		$(srcdir)/fgetsnapflags.c $(srcdir)/fsetsnapflags.c \
 		$(srcdir)/fsetversion.c $(srcdir)/getflags.c \
 		$(srcdir)/getversion.c $(srcdir)/hashstr.c $(srcdir)/iod.c \
 		$(srcdir)/ls.c $(srcdir)/mntopts.c $(srcdir)/parse_num.c \
@@ -132,6 +132,8 @@ fsetflags.o: $(srcdir)/fsetflags.c $(srcdir)/e2p.h \
  $(top_srcdir)/lib/ext2fs/ext2_fs.h $(top_builddir)/lib/ext2fs/ext2_types.h
 fgetsnapflags.o: $(srcdir)/fgetsnapflags.c $(srcdir)/e2p.h \
  $(top_srcdir)/lib/ext2fs/ext2_fs.h $(top_builddir)/lib/ext2fs/ext2_types.h
+fsetsnapflags.o: $(srcdir)/fsetsnapflags.c $(srcdir)/e2p.h \
+ $(top_srcdir)/lib/ext2fs/ext2_fs.h $(top_builddir)/lib/ext2fs/ext2_types.h
 fgetversion.o: $(srcdir)/fgetversion.c $(srcdir)/e2p.h \
  $(top_srcdir)/lib/ext2fs/ext2_fs.h $(top_builddir)/lib/ext2fs/ext2_types.h
 fsetversion.o: $(srcdir)/fsetversion.c $(srcdir)/e2p.h \
diff --git a/lib/e2p/e2p.h b/lib/e2p/e2p.h
index 0dda09f..e64421b 100644
--- a/lib/e2p/e2p.h
+++ b/lib/e2p/e2p.h
@@ -30,6 +30,7 @@
 
 
 int fgetsnapflags(const char * name, unsigned long * flags);
+int fsetsnapflags(const char * name, unsigned long flags);
 int fgetflags (const char * name, unsigned long * flags);
 int fgetversion (const char * name, unsigned long * version);
 int fsetflags (const char * name, unsigned long flags);
diff --git a/lib/ext2fs/ext2_fs.h b/lib/ext2fs/ext2_fs.h
index 614f284..63637fd 100644
--- a/lib/ext2fs/ext2_fs.h
+++ b/lib/ext2fs/ext2_fs.h
@@ -327,6 +327,7 @@ struct ext4_new_group_input {
 #define EXT2_IOC_GROUP_ADD		_IOW('f', 8,struct ext2_new_group_input)
 #define EXT4_IOC_GROUP_ADD		_IOW('f', 8,struct ext4_new_group_input)
 #define EXT2_IOC_GETSNAPFLAGS		_IOR('f', 13, long)
+#define EXT2_IOC_SETSNAPFLAGS		_IOW('f', 14, long)
 
 /*
  * Snapshot status/control flags for lssnap/chsnap.
diff --git a/misc/Makefile.in b/misc/Makefile.in
index 333237e..38e3af1 100644
--- a/misc/Makefile.in
+++ b/misc/Makefile.in
@@ -443,6 +443,8 @@ install: all $(SMANPAGES) $(UMANPAGES) installdirs
 	done
 	$(Q) $(INSTALL_PROGRAM) lsattr \
 		$(DESTDIR)$(root_sbindir)/lssnap
+	$(Q) $(INSTALL_PROGRAM) chattr \
+		$(DESTDIR)$(root_sbindir)/chsnap
 	$(Q) for i in $(SMANPAGES); do \
 		for j in $(COMPRESS_EXT); do \
 			$(RM) -f $(DESTDIR)$(man8dir)/$$i.$$j; \
@@ -537,7 +539,7 @@ uninstall:
 	for i in $(UMANPAGES); do \
 		$(RM) -f $(DESTDIR)$(man1dir)/$$i; \
 	done
-	for i in $(FINDFS_LINK) e2label lssnap ; do \
+	for i in $(FINDFS_LINK) e2label lssnap chsnap ; do \
 		$(RM) -f $(DESTDIR)$(root_sbindir)/$$i; \
 	done
 	for i in $(FMANPAGES); do \
diff --git a/misc/chattr.c b/misc/chattr.c
index de33b08..ab06d44 100644
--- a/misc/chattr.c
+++ b/misc/chattr.c
@@ -56,6 +56,8 @@
 
 static const char * program_name = "chattr";
 
+static int chsnap;
+
 static int add;
 static int rem;
 static int set;
@@ -81,6 +83,12 @@ static unsigned long sf;
 
 static void usage(void)
 {
+	if (chsnap) {
+		fprintf(stderr,
+			_("Usage: %s [-+=Sn] snapshot files...\n"),
+			program_name);
+		exit(1);
+	}
 	fprintf(stderr,
 		_("Usage: %s [-RVf] [-+=AacDdeijsSu] [-v version] files...\n"),
 		program_name);
@@ -92,7 +100,7 @@ struct flags_char {
 	char 		optchar;
 };
 
-static const struct flags_char flags_array[] = {
+static const struct flags_char ext2_flags_array[] = {
 	{ EXT2_NOATIME_FL, 'A' },
 	{ EXT2_SYNC_FL, 'S' },
 	{ EXT2_DIRSYNC_FL, 'D' },
@@ -106,6 +114,16 @@ static const struct flags_char flags_array[] = {
 	{ EXT2_UNRM_FL, 'u' },
 	{ EXT2_NOTAIL_FL, 't' },
 	{ EXT2_TOPDIR_FL, 'T' },
+	{ EXT4_SNAPFILE_FL, 'x' },
+	{ 0, 0 }
+};
+
+static const struct flags_char *flags_array = ext2_flags_array;
+
+/* Snapshot dynamic state flags */
+static struct flags_char snapshot_flags_array[] = {
+	{ 1UL<<EXT4_SNAPSHOT_LIST, 'S' },
+	{ 1UL<<EXT4_SNAPSHOT_ENABLED, 'n' },
 	{ 0, 0 }
 };
 
@@ -193,6 +211,7 @@ static int change_attributes(const char * name)
 	unsigned long flags;
 	STRUCT_STAT	st;
 	int extent_file = 0;
+	int ret;
 
 	if (LSTAT (name, &st) == -1) {
 		if (!silent)
@@ -201,7 +220,11 @@ static int change_attributes(const char * name)
 		return -1;
 	}
 
-	if (fgetflags(name, &flags) == -1) {
+	if (chsnap)
+		ret = fgetsnapflags (name, &flags);
+	else
+		ret = fgetflags (name, &flags);
+	if (ret == -1) {
 		if (!silent)
 			com_err(program_name, errno,
 					_("while reading flags on %s"), name);
@@ -222,7 +245,11 @@ static int change_attributes(const char * name)
 			print_flags (stdout, sf, 0);
 			printf ("\n");
 		}
-		if (fsetflags (name, sf) == -1)
+		if (chsnap)
+			ret = fsetsnapflags (name, sf);
+		else
+			ret = fsetflags (name, sf);
+		if (ret == -1)
 			perror (name);
 	} else {
 		if (rem)
@@ -243,7 +270,11 @@ static int change_attributes(const char * name)
 		}
 		if (!S_ISDIR(st.st_mode))
 			flags &= ~EXT2_DIRSYNC_FL;
-		if (fsetflags(name, flags) == -1) {
+		if (chsnap)
+			ret = fsetsnapflags (name, flags);
+		else
+			ret = fsetflags (name, flags);
+		if (ret == -1) {
 			if (!silent) {
 				com_err(program_name, errno,
 						_("while setting flags on %s"),
@@ -303,6 +334,11 @@ int main (int argc, char ** argv)
 #endif
 	if (argc && *argv)
 		program_name = *argv;
+	i = strlen(program_name);
+	if (i >= 6 && !strcmp(program_name + i - 6, "chsnap")) {
+		flags_array = snapshot_flags_array;
+		chsnap = 1;
+	}
 	i = 1;
 	while (i < argc && !end_arg) {
 		/* '--' arg should end option processing */
