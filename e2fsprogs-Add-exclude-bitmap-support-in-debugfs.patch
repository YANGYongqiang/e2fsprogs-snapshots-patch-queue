	.file	"inode.cc"
	.text
.Ltext0:
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC0:
	.string	"inode.cc"
	.section	.rodata.str1.4,"aMS",@progbits,1
	.align 4
.LC1:
	.string	"refs_to_mmap[group] == 0 && nr_mmaps > 0"
	.text
	.p2align 4,,15
	.globl	_Z11inode_unmapi
	.type	_Z11inode_unmapi, @function
_Z11inode_unmapi:
.LFB2557:
	.file 1 "inode.cc"
	.loc 1 39 0
	.cfi_startproc
.LVL0:
	pushl	%ebx
.LCFI0:
	.cfi_def_cfa_offset 8
	.cfi_offset 3, -8
	subl	$24, %esp
.LCFI1:
	.cfi_def_cfa_offset 32
.LBB38:
	.loc 1 40 0
	movl	all_inodes, %eax
.LBE38:
	.loc 1 39 0
	movl	32(%esp), %ebx
.LBB39:
	.loc 1 40 0
	movl	(%eax,%ebx,4), %edx
	testl	%edx, %edx
	je	.L1
	.loc 1 44 0
	movl	refs_to_mmap, %eax
	movl	(%eax,%ebx,4), %eax
	testl	%eax, %eax
	jne	.L3
	.loc 1 44 0 is_stmt 0 discriminator 2
	movl	nr_mmaps, %eax
	testl	%eax, %eax
	jle	.L3
	.loc 1 45 0 is_stmt 1
	subl	$1, %eax
	movl	%eax, nr_mmaps
	.loc 1 46 0
	movl	all_mmaps, %eax
	movl	(%eax,%ebx,4), %ecx
	movl	inodes_per_group_, %eax
	imull	inode_size_, %eax
	subl	%ecx, %edx
	movl	%ecx, (%esp)
	addl	%edx, %eax
	movl	%eax, 4(%esp)
	call	munmap
	.loc 1 47 0
	movl	all_inodes, %eax
	movl	$0, (%eax,%ebx,4)
.L1:
.LBE39:
	.loc 1 49 0
	addl	$24, %esp
	.cfi_remember_state
.LCFI2:
	.cfi_def_cfa_offset 8
	popl	%ebx
.LCFI3:
	.cfi_def_cfa_offset 4
	.cfi_restore 3
	ret
.L3:
.LCFI4:
	.cfi_restore_state
.LBB40:
	.loc 1 44 0 discriminator 1
	movl	$_ZZ11inode_unmapiE19__PRETTY_FUNCTION__, 12(%esp)
	movl	$44, 8(%esp)
	movl	$.LC0, 4(%esp)
	movl	$.LC1, (%esp)
	call	__assert_fail
.LBE40:
	.cfi_endproc
.LFE2557:
	.size	_Z11inode_unmapi, .-_Z11inode_unmapi
	.section	.rodata.str1.1
.LC2:
	.string	": mmap: "
	.section	.rodata.str1.4
	.align 4
.LC3:
	.string	"all_mmaps[group] != ((void *) -1)"
	.section	.rodata.str1.1
.LC4:
	.string	"refs_to_mmap[group] == 0"
	.text
	.p2align 4,,15
	.globl	_Z10inode_mmapi
	.type	_Z10inode_mmapi, @function
_Z10inode_mmapi:
.LFB2558:
	.loc 1 59 0
	.cfi_startproc
.LVL1:
	subl	$60, %esp
.LCFI5:
	.cfi_def_cfa_offset 64
.LBB101:
	.loc 1 60 0
	movl	all_inodes, %eax
.LBE101:
	.loc 1 59 0
	movl	%ebx, 44(%esp)
	movl	64(%esp), %ebx
	.cfi_offset 3, -20
	movl	%esi, 48(%esp)
	movl	%edi, 52(%esp)
	movl	%ebp, 56(%esp)
.LBB172:
	.loc 1 60 0
	movl	(%eax,%ebx,4), %ecx
	leal	0(,%ebx,4), %esi
	.cfi_offset 5, -8
	.cfi_offset 7, -12
	.cfi_offset 6, -16
	testl	%ecx, %ecx
	je	.L22
.L6:
.LBE172:
	.loc 1 101 0
	movl	44(%esp), %ebx
	movl	48(%esp), %esi
	movl	52(%esp), %edi
	movl	56(%esp), %ebp
	addl	$60, %esp
	.cfi_remember_state
.LCFI6:
	.cfi_def_cfa_offset 4
	.cfi_restore 5
	.cfi_restore 7
	.cfi_restore 6
	.cfi_restore 3
	ret
	.p2align 4,,7
	.p2align 3
.L22:
.LCFI7:
	.cfi_restore_state
.LBB173:
.LBB102:
	.loc 1 65 0
	cmpl	$255, nr_mmaps
	jle	.L8
.LVL2:
.LBB103:
	.loc 1 69 0 discriminator 1
	movl	groups_, %edx
	testl	%edx, %edx
	jle	.L8
	.loc 1 69 0 is_stmt 0
	xorl	%edi, %edi
	jmp	.L10
.LVL3:
	.p2align 4,,7
	.p2align 3
.L9:
	addl	$1, %edi
.LVL4:
	cmpl	%edi, groups_
	jle	.L8
	movl	all_inodes, %eax
.LVL5:
.L10:
	.loc 1 71 0 is_stmt 1
	movl	(%eax,%edi,4), %eax
	testl	%eax, %eax
	je	.L9
	.loc 1 73 0
	movl	refs_to_mmap, %eax
	movl	(%eax,%edi,4), %ebp
	testl	%ebp, %ebp
	jg	.L9
	.loc 1 75 0
	movl	%edi, (%esp)
	call	_Z11inode_unmapi
	.loc 1 76 0
	movl	nr_mmaps, %ecx
	testl	%ecx, %ecx
	jne	.L9
	.p2align 4,,7
	.p2align 3
.L8:
.LBE103:
.LBE102:
	.loc 1 82 0
	movl	page_size_, %ebp
	.loc 1 81 0
	movl	%ebx, %eax
	sall	$5, %eax
	addl	group_descriptor_table, %eax
	.loc 1 82 0
	movl	%ebp, %edx
	.loc 1 81 0
	movl	8(%eax), %edi
.LVL6:
	.loc 1 82 0
	sarl	$31, %edx
	movl	%ebp, %eax
.LVL7:
	idivl	block_size_
	.loc 1 83 0
	movl	%edi, %edx
	sarl	$31, %edx
	.loc 1 82 0
	movl	%eax, %ecx
	.loc 1 83 0
	movl	%edi, %eax
	idivl	%ecx
	movl	%eax, %ecx
.LVL8:
	.loc 1 84 0
	movl	%ebp, %eax
.LVL9:
	.loc 1 87 0
	movl	all_mmaps, %ebp
	.loc 1 84 0
	imull	%ecx
.LBB104:
.LBB105:
	.file 2 "conversion.h"
	.loc 2 63 0
	movl	block_size_log_, %ecx
.LVL10:
.LBE105:
.LBE104:
	.loc 1 87 0
	addl	%esi, %ebp
	.loc 1 84 0
	movl	%eax, 20(%esp)
.LBB108:
.LBB106:
	.loc 2 62 0
	movl	%edi, %eax
	.loc 2 63 0
	sall	%cl, %eax
	testb	$32, %cl
.LBE106:
.LBE108:
	.loc 1 84 