e2fsprogs: Snapshot control with chsnap/lssnap

From: Amir Goldstein <amir73il@users.sf.net>

Set/clear snapshots parent directory with chattr +/-x.
Take/delete snapshot with chsnap +/-S.
Enable/disable snapshot with chsnap +/-n.
View snapshot status with lssnap.

Signed-off-by: Amir Goldstein <amir73il@users.sf.net>

diff --git a/lib/e2p/Makefile.in b/lib/e2p/Makefile.in
index 9775a98..a2a8f48 100644
--- a/lib/e2p/Makefile.in
+++ b/lib/e2p/Makefile.in
@@ -17,12 +17,14 @@ INSTALL = @INSTALL@
 all::	e2p.pc
 
 OBJS=		feature.o fgetflags.o fsetflags.o fgetversion.o fsetversion.o \
+		fgetsnapflags.o fsetsnapflags.o \
 		getflags.o getversion.o hashstr.o iod.o ls.o mntopts.o \
 		parse_num.o pe.o pf.o ps.o setflags.o setversion.o uuid.o \
 		ostype.o percent.o
 
 SRCS=		$(srcdir)/feature.c $(srcdir)/fgetflags.c \
-		$(srcdir)/fsetflags.c $(srcdir)/fgetversion.c \
+		$(srcdir)/fsetflags.c $(srcdir)/fgetsnapflags.c \
+		$(srcdir)/fsetsnapflags.c $(srcdir)/fgetversion.c \
 		$(srcdir)/fsetversion.c $(srcdir)/getflags.c \
 		$(srcdir)/getversion.c $(srcdir)/hashstr.c $(srcdir)/iod.c \
 		$(srcdir)/ls.c $(srcdir)/mntopts.c $(srcdir)/parse_num.c \
@@ -128,6 +130,10 @@ fgetflags.o: $(srcdir)/fgetflags.c $(srcdir)/e2p.h \
  $(top_srcdir)/lib/ext2fs/ext2_fs.h $(top_builddir)/lib/ext2fs/ext2_types.h
 fsetflags.o: $(srcdir)/fsetflags.c $(srcdir)/e2p.h \
  $(top_srcdir)/lib/ext2fs/ext2_fs.h $(top_builddir)/lib/ext2fs/ext2_types.h
+fgetsnapflags.o: $(srcdir)/fgetsnapflags.c $(srcdir)/e2p.h \
+ $(top_srcdir)/lib/ext2fs/ext2_fs.h $(top_builddir)/lib/ext2fs/ext2_types.h
+fsetsnapflags.o: $(srcdir)/fsetsnapflags.c $(srcdir)/e2p.h \
+ $(top_srcdir)/lib/ext2fs/ext2_fs.h $(top_builddir)/lib/ext2fs/ext2_types.h
 fgetversion.o: $(srcdir)/fgetversion.c $(srcdir)/e2p.h \
  $(top_srcdir)/lib/ext2fs/ext2_fs.h $(top_builddir)/lib/ext2fs/ext2_types.h
 fsetversion.o: $(srcdir)/fsetversion.c $(srcdir)/e2p.h \
diff --git a/lib/e2p/e2p.h b/lib/e2p/e2p.h
index 4a68dd9..e64421b 100644
--- a/lib/e2p/e2p.h
+++ b/lib/e2p/e2p.h
@@ -26,8 +26,11 @@
 /* `options' for print_flags() */
 
 #define PFOPT_LONG  1 /* Must be 1 for compatibility with `int long_format'. */
+#define PFOPT_SNAPSHOT  2 /* Print snapshot flags */
 
 
+int fgetsnapflags(const char * name, unsigned long * flags);
+int fsetsnapflags(const char * name, unsigned long flags);
 int fgetflags (const char * name, unsigned long * flags);
 int fgetversion (const char * name, unsigned long * version);
 int fsetflags (const char * name, unsigned long flags);
diff --git a/lib/e2p/fgetsnapflags.c b/lib/e2p/fgetsnapflags.c
new file mode 100644
index 0000000..c04883d
--- /dev/null
+++ b/lib/e2p/fgetsnapflags.c
@@ -0,0 +1,65 @@
+/*
+ * fgetsnapflags.c	- Get snapshot file flags on an ext4 file system
+ *
+ * from fgetflags.c
+ *
+ * Copyright (C) 1993, 1994  Remy Card <card@masi.ibp.fr>
+ *                           Laboratoire MASI, Institut Blaise Pascal
+ *                           Universite Pierre et Marie Curie (Paris VI)
+ *
+ * %Begin-Header%
+ * This file may be redistributed under the terms of the GNU Library
+ * General Public License, version 2.
+ * %End-Header%
+ */
+
+#define _LARGEFILE_SOURCE
+#define _LARGEFILE64_SOURCE
+
+#if HAVE_ERRNO_H
+#include <errno.h>
+#endif
+#if HAVE_UNISTD_H
+#include <unistd.h>
+#endif
+#include <sys/types.h>
+#include <sys/stat.h>
+#if HAVE_EXT2_IOCTLS
+#include <fcntl.h>
+#include <sys/ioctl.h>
+#endif
+
+#include "e2p.h"
+
+#ifdef O_LARGEFILE
+#define OPEN_FLAGS (O_RDONLY|O_NONBLOCK|O_LARGEFILE)
+#else
+#define OPEN_FLAGS (O_RDONLY|O_NONBLOCK)
+#endif
+
+int fgetsnapflags(const char * name, unsigned long * flags)
+{
+	struct stat buf;
+#if HAVE_EXT2_IOCTLS
+#if !APPLE_DARWIN
+	int fd, r, f, save_errno = 0;
+
+	if (!lstat(name, &buf) && !S_ISREG(buf.st_mode))
+		goto notsupp;
+	fd = open(name, OPEN_FLAGS);
+	if (fd == -1)
+		return -1;
+	r = ioctl(fd, EXT2_IOC_GETSNAPFLAGS, &f);
+	if (r == -1)
+		save_errno = errno;
+	*flags = f;
+	close(fd);
+	if (save_errno)
+		errno = save_errno;
+	return r;
+#endif
+#endif /* HAVE_EXT2_IOCTLS */
+notsupp:
+	errno = EOPNOTSUPP;
+	return -1;
+}
diff --git a/lib/e2p/fsetsnapflags.c b/lib/e2p/fsetsnapflags.c
new file mode 100644
index 0000000..4ab7e3b
--- /dev/null
+++ b/lib/e2p/fsetsnapflags.c
@@ -0,0 +1,65 @@
+/*
+ * fsetsnapflags.c	- Set snapshot file flags on an ext4 file system
+ *
+ * from fsetflags.c
+ *
+ * Copyright (C) 1993, 1994  Remy Card <card@masi.ibp.fr>
+ *                           Laboratoire MASI, Institut Blaise Pascal
+ *                           Universite Pierre et Marie Curie (Paris VI)
+ *
+ * %Begin-Header%
+ * This file may be redistributed under the terms of the GNU Library
+ * General Public License, version 2.
+ * %End-Header%
+ */
+
+#define _LARGEFILE_SOURCE
+#define _LARGEFILE64_SOURCE
+
+#if HAVE_ERRNO_H
+#include <errno.h>
+#endif
+#if HAVE_UNISTD_H
+#include <unistd.h>
+#endif
+#include <sys/types.h>
+#include <sys/stat.h>
+#if HAVE_EXT2_IOCTLS
+#include <fcntl.h>
+#include <sys/ioctl.h>
+#endif
+
+#include "e2p.h"
+
+#ifdef O_LARGEFILE
+#define OPEN_FLAGS (O_RDONLY|O_NONBLOCK|O_LARGEFILE)
+#else
+#define OPEN_FLAGS (O_RDONLY|O_NONBLOCK)
+#endif
+
+int fsetsnapflags(const char * name, unsigned long flags)
+{
+	struct stat buf;
+#if HAVE_EXT2_IOCTLS
+#if !APPLE_DARWIN
+	int fd, r, f, save_errno = 0;
+
+	if (!lstat(name, &buf) && !S_ISREG(buf.st_mode))
+		goto notsupp;
+	fd = open(name, OPEN_FLAGS);
+	if (fd == -1)
+		return -1;
+	f = (int) flags;
+	r = ioctl(fd, EXT2_IOC_SETSNAPFLAGS, &f);
+	if (r == -1)
+		save_errno = errno;
+	close(fd);
+	if (save_errno)
+		errno = save_errno;
+	return r;
+#endif
+#endif /* HAVE_EXT2_IOCTLS */
+notsupp:
+	errno = EOPNOTSUPP;
+	return -1;
+}
diff --git a/lib/e2p/pf.c b/lib/e2p/pf.c
index f34a5cc..e713460 100644
--- a/lib/e2p/pf.c
+++ b/lib/e2p/pf.c
@@ -48,16 +48,32 @@ static struct flags_name flags_array[] = {
 	{ EXT2_TOPDIR_FL, "T", "Top_of_Directory_Hierarchies" },
 	{ EXT4_EXTENTS_FL, "e", "Extents" },
 	{ EXT4_HUGE_FILE_FL, "h", "Huge_file" },
+	{ EXT4_SNAPFILE_FL, "x", "Snapshot_File" },
+	{ 0, NULL, NULL }
+};
+
+/* Snapshot dynamic state flags */
+static struct flags_name snapshot_flags_array[] = {
+	{ 1UL<<EXT4_SNAPSHOT_LIST, "S", "on_liSt" },
+	{ 1UL<<EXT4_SNAPSHOT_ENABLED, "n", "eNabled" },
+	{ 1UL<<EXT4_SNAPSHOT_ACTIVE, "a", "Active" },
+	{ 1UL<<EXT4_SNAPSHOT_INUSE, "p", "inuse_by_Previous" },
+	{ 1UL<<EXT4_SNAPSHOT_DELETED, "s", "Deleted" },
+	{ 1UL<<EXT4_SNAPSHOT_SHRUNK, "h", "sHrunk" },
+	{ 1UL<<EXT4_SNAPSHOT_OPEN, "o", "mOunted" },
+	{ 1UL<<EXT4_SNAPSHOT_TAGGED, "t", "Tagged" },
 	{ 0, NULL, NULL }
 };
 
 void print_flags (FILE * f, unsigned long flags, unsigned options)
 {
+	struct flags_name *array = ((options & PFOPT_SNAPSHOT) ?
+					snapshot_flags_array : flags_array);
 	int long_opt = (options & PFOPT_LONG);
 	struct flags_name *fp;
 	int	first = 1;
 
-	for (fp = flags_array; fp->flag != 0; fp++) {
+	for (fp = array; fp->flag != 0; fp++) {
 		if (flags & fp->flag) {
 			if (long_opt) {
 				if (first)
diff --git a/lib/ext2fs/ext2_fs.h b/lib/ext2fs/ext2_fs.h
index f7ebe09..63637fd 100644
--- a/lib/ext2fs/ext2_fs.h
+++ b/lib/ext2fs/ext2_fs.h
@@ -326,6 +326,26 @@ struct ext4_new_group_input {
 #define EXT2_IOC_GROUP_EXTEND		_IOW('f', 7, unsigned long)
 #define EXT2_IOC_GROUP_ADD		_IOW('f', 8,struct ext2_new_group_input)
 #define EXT4_IOC_GROUP_ADD		_IOW('f', 8,struct ext4_new_group_input)
+#define EXT2_IOC_GETSNAPFLAGS		_IOR('f', 13, long)
+#define EXT2_IOC_SETSNAPFLAGS		_IOW('f', 14, long)
+
+/*
+ * Snapshot status/control flags for lssnap/chsnap.
+ * The flags below must appear in the same order as they do in ext4 dynamic
+ * inode state flags enum. GETSNAPFLAGS ioctl shifts them down to lower 8 bits.
+ */
+enum {
+	EXT4_SNAPSHOT_LIST = 0,		/* snapshot is on list (S) */
+	EXT4_SNAPSHOT_ENABLED = 1,	/* snapshot is enabled (n) */
+	EXT4_SNAPSHOT_ACTIVE = 2,	/* snapshot is active  (a) */
+	EXT4_SNAPSHOT_INUSE = 3,	/* snapshot is in-use  (p) */
+	EXT4_SNAPSHOT_DELETED = 4,	/* snapshot is deleted (s) */
+	EXT4_SNAPSHOT_SHRUNK = 5,	/* snapshot was shrunk (h) */
+	EXT4_SNAPSHOT_OPEN = 6,		/* snapshot is mounted (o) */
+	EXT4_SNAPSHOT_TAGGED = 7,	/* snapshot is tagged  (t) */
+};
+
+
 
 /*
  * Structure of an inode on the disk
diff --git a/misc/chattr.c b/misc/chattr.c
index de33b08..ab06d44 100644
--- a/misc/chattr.c
+++ b/misc/chattr.c
@@ -56,6 +56,8 @@
 
 static const char * program_name = "chattr";
 
+static int chsnap;
+
 static int add;
 static int rem;
 static int set;
@@ -81,6 +83,12 @@ static unsigned long sf;
 
 static void usage(void)
 {
+	if (chsnap) {
+		fprintf(stderr,
+			_("Usage: %s [-+=Sn] snapshot files...\n"),
+			program_name);
+		exit(1);
+	}
 	fprintf(stderr,
 		_("Usage: %s [-RVf] [-+=AacDdeijsSu] [-v version] files...\n"),
 		program_name);
@@ -92,7 +100,7 @@ struct flags_char {
 	char 		optchar;
 };
 
-static const struct flags_char flags_array[] = {
+static const struct flags_char ext2_flags_array[] = {
 	{ EXT2_NOATIME_FL, 'A' },
 	{ EXT2_SYNC_FL, 'S' },
 	{ EXT2_DIRSYNC_FL, 'D' },
@@ -106,6 +114,16 @@ static const struct flags_char flags_array[] = {
 	{ EXT2_UNRM_FL, 'u' },
 	{ EXT2_NOTAIL_FL, 't' },
 	{ EXT2_TOPDIR_FL, 'T' },
+	{ EXT4_SNAPFILE_FL, 'x' },
+	{ 0, 0 }
+};
+
+static const struct flags_char *flags_array = ext2_flags_array;
+
+/* Snapshot dynamic state flags */
+static struct flags_char snapshot_flags_array[] = {
+	{ 1UL<<EXT4_SNAPSHOT_LIST, 'S' },
+	{ 1UL<<EXT4_SNAPSHOT_ENABLED, 'n' },
 	{ 0, 0 }
 };
 
@@ -193,6 +211,7 @@ static int change_attributes(const char * name)
 	unsigned long flags;
 	STRUCT_STAT	st;
 	int extent_file = 0;
+	int ret;
 
 	if (LSTAT (name, &st) == -1) {
 		if (!silent)
@@ -201,7 +220,11 @@ static int change_attributes(const char * name)
 		return -1;
 	}
 
-	if (fgetflags(name, &flags) == -1) {
+	if (chsnap)
+		ret = fgetsnapflags (name, &flags);
+	else
+		ret = fgetflags (name, &flags);
+	if (ret == -1) {
 		if (!silent)
 			com_err(program_name, errno,
 					_("while reading flags on %s"), name);
@@ -222,7 +245,11 @@ static int change_attributes(const char * name)
 			print_flags (stdout, sf, 0);
 			printf ("\n");
 		}
-		if (fsetflags (name, sf) == -1)
+		if (chsnap)
+			ret = fsetsnapflags (name, sf);
+		else
+			ret = fsetflags (name, sf);
+		if (ret == -1)
 			perror (name);
 	} else {
 		if (rem)
@@ -243,7 +270,11 @@ static int change_attributes(const char * name)
 		}
 		if (!S_ISDIR(st.st_mode))
 			flags &= ~EXT2_DIRSYNC_FL;
-		if (fsetflags(name, flags) == -1) {
+		if (chsnap)
+			ret = fsetsnapflags (name, flags);
+		else
+			ret = fsetflags (name, flags);
+		if (ret == -1) {
 			if (!silent) {
 				com_err(program_name, errno,
 						_("while setting flags on %s"),
@@ -303,6 +334,11 @@ int main (int argc, char ** argv)
 #endif
 	if (argc && *argv)
 		program_name = *argv;
+	i = strlen(program_name);
+	if (i >= 6 && !strcmp(program_name + i - 6, "chsnap")) {
+		flags_array = snapshot_flags_array;
+		chsnap = 1;
+	}
 	i = 1;
 	while (i < argc && !end_arg) {
 		/* '--' arg should end option processing */
diff --git a/misc/lsattr.c b/misc/lsattr.c
index 15b17ad..c465e49 100644
--- a/misc/lsattr.c
+++ b/misc/lsattr.c
@@ -78,8 +78,13 @@ static int list_attributes (const char * name)
 {
 	unsigned long flags;
 	unsigned long generation;
+	int ret;
 
-	if (fgetflags (name, &flags) == -1) {
+	if (pf_options & PFOPT_SNAPSHOT)
+		ret = fgetsnapflags (name, &flags);
+	else
+		ret = fgetflags (name, &flags);
+	if (ret == -1) {
 		com_err (program_name, errno, _("While reading flags on %s"),
 			 name);
 		return -1;
@@ -169,6 +174,10 @@ int main (int argc, char ** argv)
 #endif
 	if (argc && *argv)
 		program_name = *argv;
+	i = strlen(program_name);
+	if (i >= 6 && !strcmp(program_name + i - 6, "lssnap"))
+		pf_options |= PFOPT_SNAPSHOT;
+
 	while ((c = getopt (argc, argv, "RVadlv")) != EOF)
 		switch (c)
 		{
@@ -185,7 +194,7 @@ int main (int argc, char ** argv)
 				dirs_opt = 1;
 				break;
 			case 'l':
-				pf_options = PFOPT_LONG;
+				pf_options |= PFOPT_LONG;
 				break;
 			case 'v':
 				generation_opt = 1;
